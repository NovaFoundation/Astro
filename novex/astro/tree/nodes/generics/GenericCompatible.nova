package "novex/astro/tree/nodes/generics"

import "novex/astro/InvalidParseException"
import "novex/astro/util/Location"
import "novex/astro/tree/nodes/Node"
import "novex/astro/tree/nodes/Value"
import "novex/astro/tree/nodes/Type"

import "novex/astro/util/CompilerStringFunctions"

trait GenericCompatible extends Node {
    visible GenericParameter[] genericParameters
    
    public writeGenericParameters() =>
        genericParameters.count > 0 ?
            "<" + genericParameters.map({ _.toNova() }).join(", ") + ">" :
            ""
    
    public cloneTo(GenericCompatible other) => other {
        other.genericParameters = genericParameters
    }
}