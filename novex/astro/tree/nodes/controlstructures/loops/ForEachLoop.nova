package "novex/astro/tree/nodes/controlstructures/loops"

import "novex/astro/SyntaxErrorException"
import "novex/astro/InvalidParseException"
import "novex/astro/util/Location"
import "novex/astro/tree/nodes/Node"
import "novex/astro/tree/nodes/Scope"
import "novex/astro/tree/nodes/Value"
import "novex/astro/tree/nodes/variables/LocalDeclaration"
import "novex/astro/tree/nodes/variables/VariableDeclaration"
import "novex/astro/tree/nodes/controlstructures/ControlStructure"

import "novex/astro/util/CompilerStringFunctions"

/// @Loop extension that represents 
///
/// author: Braden Steffaniak
/// since: 
/// version: 
class ForEachLoop extends Loop {
    visible LocalDeclaration variable
    visible Value iterator
    
    /// Create a new ForEachLoop node.
    /// 
    /// #exampleInputs
    /// 
    /// parent:   The parent of the ForEachLoop node.
    /// location: The location of the input text in the source file.
    public construct(Node parent = null, Location location = Location.INVALID) {
        super(parent, location)
    }
    
    public cloneTo(ForEachLoop other) => other {
        super.cloneTo(other)
        
        other.variable = variable
        other.iterator = iterator
    }
    
    public writeNova() =>
        "for (#variable.name in #iterator.toNova()) #scope.toNova()"
}