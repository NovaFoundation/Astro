package "novex/astro/tree/nodes/functions"

import "novex/astro/SyntaxErrorException"
import "novex/astro/InvalidParseException"
import "novex/astro/util/Location"
import "novex/astro/tree/nodes/Node"
import "novex/astro/tree/nodes/Type"
import "novex/astro/tree/nodes/NodeList"
import "novex/astro/tree/nodes/functions/FunctionDeclaration"
import "novex/astro/tree/nodes/variables/VariableDeclaration"

import "novex/astro/util/CompilerStringFunctions"

/// @FunctionCall extension that represents 
///
/// author: Braden Steffaniak
/// since: 
/// version: 
class Instantiation extends FunctionCall {
    visible var ObjectNotation objectNotation
    
    visible var Instantiation parentInstantiation => this
    
    /// Create a new Instantiation node.
    /// 
    /// #exampleInputs
    /// 
    /// parent:   The parent of the Instantiation node.
    /// location: The location of the input text in the source file.
    public construct(Node parent = null, Location location = Location.INVALID) {
        super(parent, location)
    }
    
    public addChild(Node node) {
        objectNotation = objectNotation ?: new ObjectNotation(this)
        
        objectNotation.addChild(node)
    }
}