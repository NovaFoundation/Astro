package "novex/astro/tree/nodes/functions"

import "novex/astro/InvalidParseException"
import "novex/astro/tree/nodes/Node"
import "novex/astro/tree/nodes/Value"
import "novex/astro/tree/nodes/variables/LocalDeclaration"
import "novex/astro/tree/nodes/functions/closures/ClosureDeclaration"
import "novex/astro/util/Location"

import "novex/astro/util/CompilerStringFunctions"

class Parameter extends LocalDeclaration {
    public var Value defaultValue
    
    visible ParameterList parentParameterList =>
        parent.class.isOfType(ParameterList) ? (ParameterList)parent : null
    
    /// Create a new Parameter node.
    /// 
    /// #exampleInputs
    /// 
    /// parent:   The parent of the Parameter node.
    /// location: The location of the input text in the source file.
    public construct(Node parent = null, Location location = Location.INVALID) {
        super(parent, location)
    }
    
    public cloneTo(Parameter other) => other {
        super.cloneTo(other)
        
        other.defaultValue = defaultValue
    }
}